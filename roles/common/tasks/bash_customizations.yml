# Bash-it
- name: download bash_it
  git:
    repo: 'https://github.com/Bash-it/bash-it/'
    dest: "{{ ansible_env.HOME }}/.bash_it"
    depth: 1
    force: yes
- name: hack bash_it to a different rc file
  lineinfile:
    dest: "{{ ansible_env.HOME }}/.bash_it/install.sh"
    regexp: "CONFIG_FILE=.bashrc"
    line: "CONFIG_FILE=.bash_it_rc"
- name: install bash_it
  command: "{{ ansible_env.HOME }}/.bash_it/install.sh -s"
- name: source bash_it
  lineinfile:
    dest: "{{ ansible_env.HOME }}/.bashrc"
    line: "source $HOME/.bash_it_rc"

# direnv
- name: setup direnv
  become: yes
  apt:
    name: direnv

- name: source direnv
  lineinfile:
    dest: "{{ ansible_env.HOME }}/.bashrc"
    line: 'eval "$(direnv hook bash)"'

# Setup ~/bin/
- name: create ~/bin dir with scripts
  copy:
    src: "{{ item }}"
    dest: "{{ ansible_env.HOME }}/bin"
    mode: preserve
    backup: yes
  with_items:
    - emacsmail
    - journal.sh
    - screenshot2file
  register: copy_result

# Notify about changed files
- debug:
    msg: "{{ item.dest }} backed up to {{ item.backup_file }}!!!"
    verbosity: 0
  when: '"backup_file" in item'
  loop: "{{ copy_result.results }}"

- name: setup ~/bin in $PATH
  lineinfile:
    dest: "{{ ansible_env.HOME }}/.bashrc"
    line: "export PATH=$HOME/bin:$PATH"
